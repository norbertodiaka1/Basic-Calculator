import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;

public class BasicCalculator extends Application {

    private String currentNumber = "";
    private double firstOperand = 0;
    private char operation = ' ';

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Basic Calculator");

        GridPane grid = new GridPane();
        grid.setPadding(new Insets(20, 20, 20, 20));
        grid.setVgap(10);
        grid.setHgap(10);

        Label output = new Label("");

        Button[] numberButtons = new Button[10];
        for (int i = 0; i < numberButtons.length; i++) {
            final int number = i;
            numberButtons[i] = new Button(String.valueOf(i));
            numberButtons[i].setMinSize(40, 40);
            numberButtons[i].setOnAction(e -> {
                currentNumber += number;
                output.setText(currentNumber);
            });
        }

        Button btnPlus = new Button("+");
        btnPlus.setOnAction(e -> {
            performOperation();
            operation = '+';
        });

        Button btnMinus = new Button("-");
        btnMinus.setOnAction(e -> {
            performOperation();
            operation = '-';
        });

        Button btnMultiply = new Button("*");
        btnMultiply.setOnAction(e -> {
            performOperation();
            operation = '*';
        });

        Button btnDivide = new Button("/");
        btnDivide.setOnAction(e -> {
            performOperation();
            operation = '/';
        });

        Button btnEquals = new Button("=");
        btnEquals.setOnAction(e -> {
            performOperation();
            operation = ' ';
        });

        Button btnClear = new Button("C");
        btnClear.setOnAction(e -> {
            currentNumber = "";
            firstOperand = 0;
            operation = ' ';
            output.setText("");
        });

        grid.add(output, 0, 0, 4, 1);
        grid.add(btnClear, 0, 1);
        grid.add(numberButtons[7], 1, 1);
        grid.add(numberButtons[8], 2, 1);
        grid.add(numberButtons[9], 3, 1);
        grid.add(btnPlus, 4, 1);
        grid.add(numberButtons[4], 1, 2);
        grid.add(numberButtons[5], 2, 2);
        grid.add(numberButtons[6], 3, 2);
        grid.add(btnMinus, 4, 2);
        grid.add(numberButtons[1], 1, 3);
        grid.add(numberButtons[2], 2, 3);
        grid.add(numberButtons[3], 3, 3);
        grid.add(btnMultiply, 4, 3);
        grid.add(numberButtons[0], 1, 4);
        grid.add(btnEquals, 2, 4);
        grid.add(btnDivide, 4, 4);

        Scene scene = new Scene(grid, 250, 250);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void performOperation() {
        if (!currentNumber.isEmpty()) {
            if (firstOperand == 0) {
                firstOperand = Double.parseDouble(currentNumber);
            } else {
                double secondOperand = Double.parseDouble(currentNumber);
                switch (operation) {
                    case '+':
                        firstOperand += secondOperand;
                        break;
                    case '-':
                        firstOperand -= secondOperand;
                        break;
                    case '*':
                        firstOperand *= secondOperand;
                        break;
                    case '/':
                        if (secondOperand != 0) {
                            firstOperand /= secondOperand;
                        } else {
                            currentNumber = "";
                            operation = ' ';
                            return;
                        }
                        break;
                }
            }
            currentNumber = "";
        }
    }
}
